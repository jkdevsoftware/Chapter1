{"version":3,"sources":["views/master-data/View.js","components/nkp-design/Table.js"],"names":["View","props","useState","data","setData","useEffect","_fetchData","a","datas","i","x","key","name","age","address","description","push","_set2Row","e","console","log","to","className","onClick","onChange","showRowNo","dataSource","dataTotal","length","rowKey","columns","title","dataIndex","align","width","filterAble","ellipsis","render","cell","row_accessible","type","RevelTable","state","pagination","current","pageSize","filters","this","setState","sorter","props_filters","forEach","item","undefined","Object","assign","filteredValue","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","target","onPressEnter","display","height","marginRight","verticalAlign","aria-hidden","filterIcon","filtered","color","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","row","index","fixed","setProps","overflow","scroll","size","loading","bordered","total","_setColumnsProps","_onChangeTable","minWidth","React","Component"],"mappings":"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","file":"static/js/33.c98b8f29.chunk.js","sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"../../components/nkp-design/Table\";\n\nexport default function View(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    _fetchData();\n  }, []);\n\n  const _fetchData = async () => {\n    let datas = [];\n    for (let i = 0; i < 1000; i++) {\n      let x = {\n        key: i,\n        name: \"John Brown\",\n        age: 32,\n        address: \"New York No. 1 Lake Park\",\n        description:\n          \"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\",\n      };\n      datas.push(x);\n    }\n    setData(datas);\n  };\n\n  const _log = () => {\n    console.log(\"log\");\n  };\n\n  const _set2Row = (e) => {\n    let datas = [];\n    for (let i = 0; i < 2; i++) {\n      let x = {\n        key: i,\n        name: \"John Brown\",\n        age: 32,\n        address: \"New York No. 1 Lake Park\",\n        description:\n          \"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\",\n      };\n      datas.push(x);\n    }\n    setData(datas);\n    _log();\n  };\n\n  return (\n    <div>\n      {console.log(\"props\", props)}\n      <Link to={`/master-data/detail/212224`}>\n        <button className=\"btn btn-primary ml-5\">Datail</button>\n      </Link>\n      <Link to={`/master-data/insert`}>\n        <button className=\"btn btn-primary ml-5\">Insert</button>\n      </Link>\n      <Link to={`/master-data/update/12345`}>\n        <button className=\"btn btn-primary ml-5\">Update</button>\n      </Link>\n      <Link to={`/product/insert`}>\n        <button className=\"btn btn-primary ml-5\">Insert Product </button>\n      </Link>\n\n      {/* <Table\n        columns={columns}\n        expandable={{\n          expandedRowRender: record => <p style={{ margin: 0 }}>{record.description}</p>,\n          rowExpandable: record => record.name !== 'Not Expandable',\n        }}\n        dataSource={data}\n        pagination={{ current: 1, pageSize: 10, position: ['bottomRight'] }}\n        onChange={(pa) => {\n        }}\n      /> */}\n\n      <button onClick={(e) => _set2Row(e)}>2 Row </button>\n      <Table\n        onChange={(e) => _fetchData(e)}\n        showRowNo={true}\n        dataSource={data}\n        dataTotal={data.length}\n        rowKey=\"key\"\n        columns={[\n          {\n            title: \"name\",\n            dataIndex: \"name\",\n            align: \"center\",\n            key: \"name\",\n            width: 250,\n            filterAble: true,\n          },\n          {\n            title: \"age\",\n            dataIndex: \"age\",\n            filterAble: true,\n            ellipsis: true,\n            key: \"age\",\n            align: \"center\",\n          },\n          {\n            title: \"address \",\n            dataIndex: \"address\",\n            filterAble: true,\n            ellipsis: true,\n            width: 150,\n            key: \"address\",\n            align: \"center\",\n          },\n          {\n            title: \"description\",\n            dataIndex: \"description\",\n            width: 120,\n            align: \"center\",\n            key: \"description\",\n          },\n          {\n            title: \"Act.\",\n            dataIndex: \"\",\n            align: \"center\",\n            width: 98,\n            key: \"Act\",\n            render: (cell) => {\n              const row_accessible = [];\n              row_accessible.push(\n                // <Link to={`/`} key=\"view\">\n                  <button\n                    key=\"view\"\n                    type=\"button\"\n                    className=\"icon-button color-primary\"\n                  >\n                    view\n                  </button>\n                //  </Link> \n              );\n              row_accessible.push(\n                // <Link to={`/`} key=\"edit\">\n                  <button\n                    key=\"edit\"\n                    type=\"button\"\n                    className=\"icon-button color-warning\"\n                  >\n                    edit\n                  </button>\n                // </Link>\n              );\n              row_accessible.push(\n                // <Link to={`/`} key=\"delete\">\n                  <button\n                    key=\"delete\"\n                    type=\"button\"\n                    className=\"icon-button color-danger\"\n                    title=\"delete\"\n                  >\n                    dalete\n                  </button>\n                // </Link>\n              );\n              return row_accessible;\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport { Table, Input, } from \"antd\"\n\nexport default class RevelTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pagination: {\n                current: 1,\n                pageSize: 10,\n            },\n            filters: {},\n        }\n    }\n\n    componentDidMount() {\n        const { pageSize, } = this.props\n\n        this.setState(state => {\n            state.pagination.pageSize = pageSize || 10\n\n            return { pagination: state.pagination }\n        })\n    }\n\n    _onChangeTable(pagination, filters, sorter) {\n        this.setState({\n            pagination: pagination,\n            filters: filters,\n        }, () => {\n            const { filters } = this.state\n            let props_filters = {}\n\n            this.props.columns.forEach(item => {\n                if (filters[item.dataIndex] !== undefined && filters[item.dataIndex] !== null) {\n                    if (item.filterAble && filters[item.dataIndex].length) {\n                        props_filters[item.dataIndex] = filters[item.dataIndex][0]\n                    } else {\n                        props_filters[item.dataIndex] = filters[item.dataIndex]\n                    }\n                }\n            })\n\n            if (this.props.onChange !== undefined) {\n                this.props.onChange({\n                    pagination: this.state.pagination,\n                    filters: props_filters,\n                    sorter: sorter,\n                })\n            }\n        })\n    }\n\n    _setColumnsProps() {\n        const { filters, pagination } = this.state\n\n        var { columns, showRowNo } = this.props\n\n        for (let i in columns) {\n            if (columns[i].filterAble) {\n                columns[i] = Object.assign(columns[i], {\n                    filteredValue: filters[columns[i].dataIndex],\n                    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n                        <div style={{ padding: 6 }}>\n                            <Input\n                                ref={(node) => { this.searchInput = node }}\n                                placeholder=\"Search\"\n                                value={selectedKeys[0]}\n                                onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                                onPressEnter={() => confirm()}\n                                style={{ width: 'unset', display: \"inline-block\" }}\n                            />\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" style={{ height: 32, marginRight: 0, verticalAlign: \"top\", }} onClick={() => confirm()}>\n                                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>S\n                            </button>\n                            <button type=\"button\" className=\"btn btn-danger btn-sm\" style={{ height: 32, marginRight: 0, verticalAlign: \"top\", }} onClick={() => clearFilters()}>\n                                <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>C\n                            </button>\n                        </div>\n                    ),\n                    filterIcon: (filtered) => (<i className=\"ant-table-filter-trigger-icon fa fa-search\" aria-hidden=\"true\" style={{ color: filtered ? \"#1890ff\" : undefined, }} />),\n                    onFilter: (value, record) => record[columns[i].dataIndex] ? record[columns[i].dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n                    onFilterDropdownVisibleChange: visible => {\n                        if (visible) setTimeout(() => this.searchInput.select(), 100)\n                    },\n                })\n            } else if (columns[i].filters !== undefined && columns[i].filters.length) {\n                columns[i] = Object.assign(columns[i], {\n                    filteredValue: filters[columns[i].dataIndex] || null,\n                    onFilter: (value, record) => {\n                        if (record[columns[i].dataIndex]) return record[columns[i].dataIndex].includes(value)\n                    },\n                })\n            }\n        }\n\n        if (showRowNo) {\n            return [\n                {\n                    title: \"No.\",\n                    render: (cell, row, index) => (((pagination.current - 1) * pagination.pageSize) + index + 1),\n                    width: 48,\n                    align: 'center',\n                    fixed: \"left\",\n                }, ...columns\n            ]\n        } else {\n            return columns\n        }\n    }\n\n    render() {\n        let { setProps } = this.props\n\n        return (\n            <div style={{ overflow: 'auto', }}>\n                <Table\n                    scroll={{x:1300}}\n                    size={this.props.size || 'small'}\n                    loading={this.props.loading || false}\n                    bordered={this.props.bordered || true}\n                    dataSource={this.props.dataSource || []}\n                    pagination={(this.props.pagination === false ? false : { ...this.state.pagination, total: this.props.dataTotal })}\n                    rowKey={(row) => row[this.props.rowKey]}\n                    columns={this._setColumnsProps()}\n                    onChange={(pagination, filters, sorter) => this._onChangeTable(pagination, filters, sorter)}\n                    style={this.props.style || { minWidth: 600, }}\n                    {...setProps}\n                />\n            </div>\n        )\n    }\n}\n\n\n"],"sourceRoot":""}