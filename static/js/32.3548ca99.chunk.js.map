{"version":3,"sources":["components/Auth/FetchUser.js","views/Setting/UserSetting.js","components/nkp-design/Table.js"],"names":["View","props","useState","data","setData","useEffect","_fetchData","a","fetch","then","Response","json","findresponse","isModalVisible2","setIsModalVisible2","test","showModal2","console","log","color","textColor","lg","href","placeholder","type","Table","onChange","e","showRowNo","dataSource","dataTotal","length","rowKey","columns","title","dataIndex","align","key","fixed","ellipsis","sorter","b","age","filterAble","render","onClick","width","visible","onOk","onCancel","UserSetting","sm","RevelTable","state","pagination","current","pageSize","filters","this","setState","props_filters","forEach","item","undefined","i","Object","assign","filteredValue","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","value","target","onPressEnter","display","className","height","marginRight","verticalAlign","aria-hidden","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","cell","row","index","setProps","overflow","scroll","x","size","loading","bordered","total","_setColumnsProps","_onChangeTable","minWidth","React","Component"],"mappings":"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","file":"static/js/32.3548ca99.chunk.js","sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"../../components/nkp-design/Table\";\r\nimport { Modal, Button ,Input} from 'antd';\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow\r\n  , CDropdown,CDropdownToggle,CDropdownItem,CDropdownMenu } from '@coreui/react'\r\n//import header from \"../nkp-design/HeaderEmp\"\r\nexport default function View(props) {\r\n\r\n\r\n  const [data, setData] = useState([]);\r\n  const [q ,setQ] = useState('');\r\n  useEffect(() => {\r\n    _fetchData();\r\n  }, []);\r\n\r\n  const _fetchData = async () => {\r\n    let datas = [];\r\n    fetch(\"http://localhost:57493/api/Login\").\r\n    then((Response)=>Response.json()).\r\n    then((findresponse=>\r\n    {\r\n        //this.datas = findresponse\r\n        setData(findresponse);\r\n        //console.log(this.state.person)\r\n    }))\r\n   \r\n  };\r\n\r\n  const _log = () => {\r\n    console.log(\"log\");\r\n  };\r\n\r\n  const _set2Row = (e) => {\r\n    let datas = [];\r\n    for (let i = 0; i < 2; i++) {\r\n      let x = {\r\n        key: i,\r\n        name: \"John Brown\",\r\n        age: 32,\r\n        address: \"New York No. 1 Lake Park\",\r\n        description:\r\n          \"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\",\r\n      };\r\n      datas.push(x);\r\n    }\r\n    setData(datas);\r\n    _log();\r\n  };\r\n  // const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\r\n  \r\n  // const showModal = () => {\r\n  //   setIsModalVisible(true);\r\n  // };\r\n\r\n  // const handleOk = () => {\r\n  //   setIsModalVisible(false);\r\n  // };\r\n\r\n  // const handleCancel = () => {\r\n  //   setIsModalVisible(false);\r\n  // };\r\n  const [test,setTest] = useState();\r\n  const showModal2 = () => {\r\n    setIsModalVisible2(true);\r\n    console.log(test)\r\n  };\r\n\r\n  const handleOk2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const handleCancel2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      {/* {console.log(\"props\", props)} */}\r\n      {/* <Link to={`/master-data/detail/212224`}>\r\n        <button className=\"btn btn-primary ml-5\">Datail</button>\r\n      </Link>\r\n      <Link to={`/master-data/insert`}>\r\n        <button className=\"btn btn-primary ml-5\">Insert</button>\r\n      </Link>\r\n      <Link to={`/master-data/update/12345`}>\r\n        <button className=\"btn btn-primary ml-5\">Update</button>\r\n      </Link>\r\n      <Link to={`/product/insert`}>\r\n        <button className=\"btn btn-primary ml-5\">Insert Product </button>\r\n      </Link> */}\r\n\r\n      {/* <Table\r\n        columns={columns}\r\n        expandable={{\r\n          expandedRowRender: record => <p style={{ margin: 0 }}>{record.description}</p>,\r\n          rowExpandable: record => record.name !== 'Not Expandable',\r\n        }}\r\n        dataSource={data}\r\n        pagination={{ current: 1, pageSize: 10, position: ['bottomRight'] }}\r\n        onChange={(pa) => {\r\n        }}\r\n      /> */}\r\n\r\n      {/* <button onClick={(e) => _set2Row(e)}>2 Row </button> */}\r\n      <CCard>\r\n        <CCardHeader color={'secondary'} textColor={'white'}>Search</CCardHeader>\r\n        <CCardBody>\r\n          <CRow lg=\"12\">\r\n            <CCol lg=\"1\">\r\n              <CDropdown >\r\n                <CDropdownToggle color=\"secondary\" >Dept</CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">NKP</CDropdownItem>\r\n                  <CDropdownItem href=\"#\">PMD</CDropdownItem>\r\n                  <CDropdownItem href=\"#\">IMO</CDropdownItem>\r\n                  <CDropdownItem href=\"#\">PCBA</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CCol>\r\n            <CCol lg=\"2\">\r\n              <Input placeholder=\"emp no.(ex. 012xxx)\" />\r\n            </CCol>\r\n            <CCol lg=\"2\">\r\n              <Button type=\"primary\">Search</Button>\r\n            </CCol>\r\n          </CRow>\r\n        </CCardBody>\r\n      </CCard>\r\n      \r\n      <Table\r\n        onChange={(e) => _fetchData(e)}\r\n        showRowNo={true}\r\n        dataSource={data}\r\n        dataTotal={data.length}\r\n        rowKey=\"key\"\r\n        columns={[\r\n          {\r\n              title:\"Emp No\",\r\n              dataIndex: \"Emp_No\",\r\n              align:\"center\",\r\n              key:\"Emp_No\",\r\n              //width:100,\r\n              fixed: \"left\",\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            dataIndex: \"Name\",\r\n            align: \"center\",\r\n            key: \"Name\",\r\n            //width: 250,\r\n            fixed:\"left\",\r\n          },\r\n          {\r\n            title: \"Age\",\r\n            dataIndex: \"Age\",\r\n            //filterAble: true,\r\n            ellipsis: true,\r\n            key: \"Age\",\r\n            align: \"center\",\r\n            sorter: (a, b) => a.age - b.age,\r\n            //width: 100,\r\n          },\r\n          {\r\n            title: \"Birthday \",\r\n            dataIndex: \"Birthday\",\r\n            filterAble: true,\r\n            ellipsis: true,\r\n            //width: 100,\r\n            key: \"Birthday\",\r\n            align: \"center\",\r\n          },\r\n          {\r\n            title: \"Dept\",\r\n            dataIndex: \"Dept\",\r\n            //width: 100,\r\n            align: \"center\",\r\n            key: \"Dept\",\r\n            filterAble: true,\r\n          },\r\n          {\r\n            title: \"Dept No\",\r\n            dataIndex: \"Dept_No\",\r\n            align: \"center\",\r\n            //width: 100,\r\n            key: \"Dept_No\",\r\n            filterAble: true,\r\n           \r\n           \r\n          },\r\n          {\r\n              title: \"Position\",\r\n            dataIndex: \"Position\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Position\",\r\n            filterAble: true,\r\n          }\r\n          ,\r\n          {\r\n              title: \"Brand\",\r\n            dataIndex: \"Brand\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Brand\",\r\n            filterAble: true,\r\n          }\r\n          ,\r\n          {\r\n              title: \"Cell\",\r\n            dataIndex: \"Cell\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Cell\",\r\n            filterAble: true,\r\n          }\r\n          ,\r\n          {\r\n              title: \"Shift\",\r\n            dataIndex: \"Shift\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Shift\",\r\n            filterAble: true,\r\n          }\r\n          ,\r\n          {\r\n              title: \"Category\",\r\n            dataIndex: \"Category\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Category\",\r\n            filterAble: true,\r\n          }\r\n          ,\r\n          {\r\n            title: \"Start Work\",\r\n            dataIndex: \"Start_Work\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Start_Work\",\r\n            filterAble: true,\r\n          }\r\n          ,\r\n          {\r\n            title: \"Car\",\r\n            dataIndex: \"Car\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Car\",\r\n            filterAble: true,\r\n          },\r\n        //   {\r\n        //     title: \"Pic.\",\r\n        //     //dataIndex: \"Car\",\r\n        //     align: \"center\",\r\n        //     //width: 150,\r\n        //     //key: \"Car\",\r\n        //     fixed: 'right',\r\n        //    render: ()=> <Button type=\"primary\" onClick={showModal}>\r\n        //    Show\r\n        //  </Button>\r\n        //   },\r\n          {\r\n            title: \"Manage\",\r\n            dataIndex: \"Emp_No\",\r\n            align: \"center\",\r\n            //width: 150,\r\n            key: \"Emp_No\",\r\n            fixed: 'right',\r\n            \r\n            render: ()=> <Button type=\"ghost\" onClick={ showModal2}>Edit</Button>\r\n          }\r\n      \r\n      ]}\r\n        \r\n      />\r\n       {/* <Modal title=\"Show Picture\" width=\"60%\" \r\n       visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <center>\r\n        <img src=\"\" width='150px' height='200px'/>\r\n        </center>\r\n      </Modal> */}\r\n      <Modal title=\"Edit\" width= \"60%\" \r\n       visible={isModalVisible2} onOk={handleOk2} onCancel={handleCancel2}>\r\n         <CCard>\r\n           <CCardHeader color={'success'} textColor={'white'}><h5>Edit Datail</h5></CCardHeader>\r\n           <CCardBody>\r\n             <CRow lg=\"12\">\r\n               <CCol lg=\"2\">Name :</CCol>\r\n               <CCol lg=\"2\">test</CCol>\r\n             </CRow>\r\n             <CRow lg=\"12\">\r\n               <CCol lg=\"2\">Name :</CCol>\r\n               <CCol lg=\"2\">test</CCol>\r\n             </CRow>\r\n           </CCardBody>\r\n         </CCard>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React,{lazy,useEffect,useState} from 'react'\r\nimport { CCard, CCardHeader, CCol, CRow, CCardBody } from '@coreui/react'\r\nimport FetchUser from '../../components/Auth/FetchUser'\r\n\r\nconst UserSetting = () => {\r\n\r\n    return (\r\n\r\n        <CCard>\r\n\r\n            <CCardHeader>\r\n                <h4>User Setting</h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CRow>\r\n                    <CCol sm=\"12\">\r\n                        <FetchUser />\r\n                    </CCol>\r\n                </CRow>\r\n            </CCardBody>\r\n\r\n        </CCard>\r\n    )\r\n};\r\n\r\nexport default UserSetting","import React from 'react'\nimport { Table, Input, } from \"antd\"\n\nexport default class RevelTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pagination: {\n                current: 1,\n                pageSize: 10,\n            },\n            filters: {},\n        }\n    }\n\n    componentDidMount() {\n        const { pageSize, } = this.props\n\n        this.setState(state => {\n            state.pagination.pageSize = pageSize || 10\n\n            return { pagination: state.pagination }\n        })\n    }\n\n    _onChangeTable(pagination, filters, sorter) {\n        this.setState({\n            pagination: pagination,\n            filters: filters,\n        }, () => {\n            const { filters } = this.state\n            let props_filters = {}\n\n            this.props.columns.forEach(item => {\n                if (filters[item.dataIndex] !== undefined && filters[item.dataIndex] !== null) {\n                    if (item.filterAble && filters[item.dataIndex].length) {\n                        props_filters[item.dataIndex] = filters[item.dataIndex][0]\n                    } else {\n                        props_filters[item.dataIndex] = filters[item.dataIndex]\n                    }\n                }\n            })\n\n            if (this.props.onChange !== undefined) {\n                this.props.onChange({\n                    pagination: this.state.pagination,\n                    filters: props_filters,\n                    sorter: sorter,\n                })\n            }\n        })\n    }\n\n    _setColumnsProps() {\n        const { filters, pagination } = this.state\n\n        var { columns, showRowNo } = this.props\n\n        for (let i in columns) {\n            if (columns[i].filterAble) {\n                columns[i] = Object.assign(columns[i], {\n                    filteredValue: filters[columns[i].dataIndex],\n                    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n                        <div style={{ padding: 6 }}>\n                            <Input\n                                ref={(node) => { this.searchInput = node }}\n                                placeholder=\"Search\"\n                                value={selectedKeys[0]}\n                                onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                                onPressEnter={() => confirm()}\n                                style={{ width: 'unset', display: \"inline-block\" }}\n                            />\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" style={{ height: 32, marginRight: 0, verticalAlign: \"top\", }} onClick={() => confirm()}>\n                                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>S\n                            </button>\n                            <button type=\"button\" className=\"btn btn-danger btn-sm\" style={{ height: 32, marginRight: 0, verticalAlign: \"top\", }} onClick={() => clearFilters()}>\n                                <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>C\n                            </button>\n                        </div>\n                    ),\n                    filterIcon: (filtered) => (<i className=\"ant-table-filter-trigger-icon fa fa-search\" aria-hidden=\"true\" style={{ color: filtered ? \"#1890ff\" : undefined, }} />),\n                    onFilter: (value, record) => record[columns[i].dataIndex] ? record[columns[i].dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n                    onFilterDropdownVisibleChange: visible => {\n                        if (visible) setTimeout(() => this.searchInput.select(), 100)\n                    },\n                })\n            } else if (columns[i].filters !== undefined && columns[i].filters.length) {\n                columns[i] = Object.assign(columns[i], {\n                    filteredValue: filters[columns[i].dataIndex] || null,\n                    onFilter: (value, record) => {\n                        if (record[columns[i].dataIndex]) return record[columns[i].dataIndex].includes(value)\n                    },\n                })\n            }\n        }\n\n        if (showRowNo) {\n            return [\n                {\n                    title: \"No.\",\n                    render: (cell, row, index) => (((pagination.current - 1) * pagination.pageSize) + index + 1),\n                    width: 48,\n                    align: 'center',\n                    fixed: \"left\",\n                }, ...columns\n            ]\n        } else {\n            return columns\n        }\n    }\n\n    render() {\n        let { setProps } = this.props\n\n        return (\n            <div style={{ overflow: 'auto', }}>\n                <Table\n                    scroll={{x:1300}}\n                    size={this.props.size || 'small'}\n                    loading={this.props.loading || false}\n                    bordered={this.props.bordered || true}\n                    dataSource={this.props.dataSource || []}\n                    pagination={(this.props.pagination === false ? false : { ...this.state.pagination, total: this.props.dataTotal })}\n                    rowKey={(row) => row[this.props.rowKey]}\n                    columns={this._setColumnsProps()}\n                    onChange={(pagination, filters, sorter) => this._onChangeTable(pagination, filters, sorter)}\n                    style={this.props.style || { minWidth: 600, }}\n                    {...setProps}\n                />\n            </div>\n        )\n    }\n}\n\n\n"],"sourceRoot":""}