{"version":3,"sources":["components/nkp-design/TableApproveOt.js","views/OT/ApproveOT.js","components/nkp-design/Table.js","components/nkp-design/DateNKP.js","models/OTModel.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["ot_model","OTmodel","TableAppOT","props","date","data","dept","deptN","useEffect","_fetchData","useState","setData","a","getOT","result","_handleApprove","res1","approveOT","date_action","Swal","title","icon","_hendleReject","record","text","buttons","dangerMode","then","willDelete","rejectOTbyEmp","OT_DATE","emp_no","EMP_NO","rejectOTbyDate","color","style","fontSize","Table","onChange","e","dataSource","dataTotal","length","rowKey","columns","dataIndex","align","fixed","width","key","filterAble","render","index","row_accessible","push","Button","type","className","faPencilAlt","size","onClick","faTimesCircle","_rejectAll","OTModel","Approve","setDate","option","id","name","selected","selects","setSelects","_handleDate","dd","_setD","_clearD","sm","FormGroup","DateNKP","valueDate","bind","this","value","val","map","Option","RevelTable","state","pagination","current","pageSize","filters","setState","sorter","props_filters","forEach","item","undefined","showRowNo","i","Object","assign","filteredValue","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","target","onPressEnter","display","height","marginRight","verticalAlign","aria-hidden","filterIcon","filtered","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","cell","row","setProps","overflow","scroll","x","loading","bordered","total","_setColumnsProps","_onChangeTable","minWidth","React","Component","Date","_d","day","getDate","slice","month","getMonth","year","getFullYear","fullDate","join","format","showToday","_handlerDate","Ot","directFetch","url","method","body","JSON","stringify","BaseModel","propTypes","children","PropTypes","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/23.e215737f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../../components/nkp-design/Table\";\r\nimport { Tag } from 'antd';\r\nimport { Select, Button } from 'react-bootstrap';\r\nimport {\r\n    CCard, CCardBody, CCardFooter, CCardHeader, CCol, CRow\r\n\r\n} from '@coreui/react'\r\nimport Swal from \"sweetalert\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faPencilAlt,\r\n    faSignOutAlt,\r\n    faTimesCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport OTmodel from '../../models/OTModel';\r\n\r\n\r\nconst ot_model = new OTmodel();\r\n\r\nexport default function TableAppOT(props) {\r\n\r\n    const date = props.date.data === \"\" ? \"\" : props.date.data;\r\n    const dept = props.dept;\r\n    const deptN = props.deptN;\r\n\r\n    useEffect(() => {\r\n        _fetchData();\r\n    }, [props]);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const _fetchData = async () => {\r\n\r\n        const result = await ot_model.getOT({\r\n            date: props.date,\r\n            dept: dept,\r\n        });\r\n        setData(result);\r\n        //console.log('check props :', props.date);\r\n\r\n    }\r\n\r\n    const _handleApprove = async () => {\r\n        const res1 = true;\r\n        await ot_model.approveOT({\r\n            dept: dept,\r\n            date_action: props.date,\r\n        });\r\n        if (res1) {\r\n            //setLoading(false);\r\n            Swal({\r\n                title: \"บันทึกข้อมูลสำเร็จ !\",\r\n                icon: \"success\",\r\n            });\r\n\r\n            await _fetchData();\r\n        }\r\n\r\n    }\r\n    const _hendleReject = async (record) => {\r\n\r\n        Swal({\r\n            // title: \"?\",\r\n            text: \"คุณแน่ใจว่าต้องการจะยกเลิกรายการนี้\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n\r\n                ot_model.rejectOTbyEmp({\r\n                    date: record.OT_DATE,\r\n                    emp_no: record.EMP_NO,\r\n                });\r\n\r\n                if (willDelete) {\r\n\r\n                    Swal(\"ยกเลิกรายการสำเร็จ\", {\r\n                        icon: \"success\",\r\n                    });\r\n\r\n                     _fetchData();\r\n\r\n                } else {\r\n                    Swal(\"ยกเลิกคำสั่ง\", {\r\n                        icon: \"success\",\r\n                    });\r\n                }\r\n            });\r\n        //console.log('check:',record.EMP_NO);\r\n        \r\n    }\r\n    async function _rejectAll() {\r\n        Swal({\r\n            // title: \"?\",\r\n            text: \"คุณแน่ใจว่าต้องการจะยกเลิกรายการนี้ทั้งหมด\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n\r\n                ot_model.rejectOTbyDate({\r\n                    date: props.date,\r\n                    dept: props.dept,\r\n                });\r\n                const res1 = true;\r\n                if (willDelete) {\r\n                    \r\n                    Swal(\"ยกเลิกรายการสำเร็จ\", {\r\n                        icon: \"success\",\r\n                    });\r\n                    _fetchData();\r\n                } else {\r\n                    Swal(\"ยกเลิกคำสั่ง\", {\r\n                        icon: \"success\",\r\n                    });\r\n                }\r\n            });\r\n\r\n    }\r\n    return (\r\n\r\n        <CCard>\r\n            <CCardHeader>\r\n                {dept === 0 ? <Tag color=\"geekblue\" style={{ fontSize: \"18px\" }} >MFG2</Tag>\r\n                    : <Tag color=\"geekblue\" style={{ fontSize: \"18px\" }}>Dept: {deptN}</Tag>\r\n                }\r\n                {date === \"\" ? <></>\r\n                    : <Tag color=\"gold\" style={{ fontSize: \"18px\" }}>Date: {props.date}</Tag>\r\n                }\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <Table\r\n                   \r\n\r\n                    onChange={(e) => _fetchData(e)}\r\n                    // showRowNo={true}\r\n                    dataSource={data}\r\n                    dataTotal={data.length}\r\n                    rowKey=\"EMP_NO\"\r\n                    columns={[\r\n                       \r\n                        {\r\n                            title: \"Car\",\r\n                            dataIndex: \"CAR\",\r\n                            align: \"center\",\r\n                            //     key: \"Emp_No\",\r\n                            // width: 100,\r\n                            fixed: \"left\",\r\n                        },\r\n                        {\r\n                            title: \"OT Date\",\r\n                            dataIndex: \"OT_DATE\",\r\n                            align: \"center\",\r\n                            //     key: \"Emp_No\",\r\n                            // width: 100,\r\n                            fixed: \"left\",\r\n                        },\r\n                        {\r\n                            title: \"Emp No\",\r\n                            dataIndex: \"EMP_NO\",\r\n                            align: \"center\",\r\n                            //     key: \"Emp_No\",\r\n                            // width: 100,\r\n                            fixed: \"left\",\r\n                        },\r\n                        {\r\n                            title: \"Name\",\r\n                            dataIndex: \"EMP_NAME\",\r\n                            align: \"center\",\r\n                            //  key: \"Name\",\r\n                            width: 120,\r\n                            //fixed: \"left\",\r\n                        },\r\n\r\n\r\n                        {\r\n                            title: \"Dept\",\r\n                            dataIndex: \"DEPT\",\r\n                            //width: 100,\r\n                            align: \"center\",\r\n                            key: \"Dept\",\r\n                            filterAble: true,\r\n                        },\r\n                     \r\n                        {\r\n                            title: \"Position\",\r\n                            dataIndex: \"POSOTION\",\r\n                            align: \"center\",\r\n                            //width: 150,\r\n                            //key: \"Position\",\r\n                            filterAble: true,\r\n                        },\r\n                        {\r\n                            title: \"Cell\",\r\n                            dataIndex: \"CELL\",\r\n                            align: \"center\",\r\n                            //width: 150,\r\n                            //key: \"Position\",\r\n                            filterAble: true,\r\n                        },\r\n                        {\r\n                            title: \"Start Time\",\r\n                            dataIndex: \"Start_time\",\r\n                            align: \"center\",\r\n                            //width: 150,\r\n                            //key: \"Position\",\r\n                            filterAble: true,\r\n                        },\r\n                        {\r\n                            title: \"End Time\",\r\n                            dataIndex: \"End_time\",\r\n                            align: \"center\",\r\n                            //width: 150,\r\n                            //key: \"Position\",\r\n                            filterAble: true,\r\n                        },\r\n                        {\r\n                            title: \"WT Min\",\r\n                            dataIndex: \"WT_min\",\r\n                            align: \"center\",\r\n                            //width: 150,\r\n                            //key: \"Position\",\r\n                            filterAble: true,\r\n                        },\r\n                        {\r\n                            title: \"OT Min\",\r\n                            dataIndex: \"OT_min\",\r\n                            align: \"center\",\r\n                            //width: 150,\r\n                            //key: \"Position\",\r\n                            filterAble: true,\r\n                        },\r\n                        {\r\n                            title: \"Manage\",\r\n                            //dataIndex: \"Car\",\r\n                            align: \"center\",\r\n                            width: 100,\r\n                            key: \"Emp_no\",\r\n                            fixed: 'right',\r\n\r\n                            render: (text, record, index) => {\r\n                                const row_accessible = [];\r\n\r\n                                row_accessible.push(\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        key=\"update\"\r\n                                        className=\" icon-button color-primary\"\r\n                                    //   onClick={() => _showUpdateWaitModal(record)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\r\n                                    </Button>\r\n                                );\r\n                                row_accessible.push(\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        key=\"del\"\r\n                                        className=\" icon-button color-danger\"\r\n                                        //color={'red'}\r\n                                        onClick={() => _hendleReject(record)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTimesCircle} size=\"lg\" />\r\n                                    </Button>\r\n                                );\r\n                                return row_accessible;\r\n                            },\r\n                        }\r\n\r\n\r\n\r\n                    ]}\r\n\r\n                />\r\n            </CCardBody>\r\n            <CCardFooter>\r\n                <CRow>\r\n                    <CCol>\r\n                        <Button\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => _handleApprove()}\r\n                        >Approve</Button>\r\n                        &nbsp;\r\n                        <Button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => _rejectAll()}\r\n                        >Reject</Button>\r\n                    </CCol>\r\n                </CRow>\r\n            </CCardFooter>\r\n        </CCard>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { CCard, CCardHeader, CCol, CRow, CCardBody } from '@coreui/react'\r\nimport { Select } from 'antd'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FormGroup } from 'reactstrap'\r\nimport DateNKP from 'src/components/nkp-design/DateNKP'\r\nimport TableAppOT from \"src/components/nkp-design/TableApproveOt\";\r\nimport OTModel from \"src/models/OTModel\";\r\n\r\nconst ot_model = new OTModel();\r\n\r\nexport default function Approve() {\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const [data, setData] = useState({\r\n        dept: \"\",\r\n        deptN: \"\",\r\n\r\n    });\r\n\r\n    const [date, setDate] = useState({\r\n        data: \"\",\r\n    });\r\n\r\n    const [selects, setSelects] = useState({\r\n        dept: {\r\n            option: [{ id: 0, name: \"-Select-\" },\r\n            { id: 1, name: \"NKP\" },\r\n            { id: 2, name: \"PCBA\" },\r\n            { id: 3, name: \"PMD\" },\r\n            { id: 4, name: \"IMO\" },\r\n            { id: 5, name: \"IAD\" },],\r\n            selected: \"\",\r\n        },\r\n    })\r\n\r\n    async function _handleDate(name, dd) {\r\n        if (name === \"date ot\") {\r\n            setDate({ ...date, data: dd });\r\n\r\n        }\r\n    }\r\n    const _setD = async () => {\r\n        setData({\r\n            ...data,\r\n            dept: selects.dept.selected === \"\" ? \"\" : selects.dept.option[selects.dept.selected].id,\r\n            deptN: selects.dept.selected === \"\" ? \"\" : selects.dept.option[selects.dept.selected].name,\r\n            \r\n        });\r\n\r\n        // console.log('check:', data);\r\n    }\r\n\r\n    const _clearD = async () => {\r\n        setData({\r\n            ...data,\r\n            dept: \"\",\r\n            deptN: \"\",\r\n            date: \"\",\r\n\r\n        });\r\n        setDate({ ...date, data: \"\" });\r\n        setSelects({\r\n            ...selects,\r\n            dept: { ...selects.dept, selected: \"\" },\r\n\r\n        });\r\n        _handleDate(\"date ot\", \"\");\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <CCard>\r\n                <CCardHeader><h4>Approve</h4></CCardHeader>\r\n                <CCardBody>\r\n                    <CRow>\r\n                        <CCol sm=\"1\">\r\n                            <label>Date:</label>\r\n                        </CCol>\r\n                        <CCol sm=\"2\">\r\n                            <FormGroup>\r\n                                <DateNKP\r\n                                    style={{ width: \"120px\" }}\r\n                                    valueDate={_handleDate.bind(this, \"date ot\")}\r\n                                ></DateNKP>\r\n                            </FormGroup>\r\n                        </CCol>\r\n                        <CCol sm=\"1\">\r\n                            <label>Dept:</label>\r\n                        </CCol>\r\n                        <CCol sm=\"2\">\r\n                            <Select\r\n                                style={{ width: \"120px\" }}\r\n                                value={\r\n                                    selects.dept.selected === \"\"\r\n                                        ? selects.dept.option[0].name\r\n                                        : selects.dept.option[selects.dept.selected].name\r\n                                }\r\n                                onChange={(val) => {\r\n\r\n                                    setSelects({\r\n                                        ...selects,\r\n                                        dept: { ...selects.dept, selected: val },\r\n                                    });\r\n                                }\r\n                                }\r\n                            >\r\n                                {selects.dept.option.map((data) => (\r\n                                    <Select.Option key={data.id}>\r\n                                        {data.name}\r\n                                    </Select.Option>\r\n                                ))}\r\n                            </Select>\r\n                        </CCol>\r\n                        <CCol sm=\"2\">\r\n                            <Button\r\n                                className=\"btn btn-primary\"\r\n                                style={{ width: \"120px\" }}\r\n                                onClick={() => _setD()}\r\n                            >\r\n                                Set\r\n                            </Button>\r\n                        </CCol>\r\n                        <CCol sm=\"2\">\r\n                            <Button\r\n                                className=\"btn btn-danger\"\r\n                                style={{ width: \"120px\" }}\r\n                                onClick={() => _clearD()}\r\n                            >\r\n                                Clear\r\n                            </Button>\r\n                        </CCol>\r\n                    </CRow>\r\n                    <br />\r\n                    <CRow>\r\n                        <CCol>\r\n                            {data.dept === \"\" ? <></> :\r\n                                <TableAppOT\r\n                                    date={date.data}\r\n                                    dept={data.dept}\r\n                                    deptN={data.deptN}\r\n                                />\r\n                            }\r\n\r\n                        </CCol>\r\n                    </CRow>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}","import React from 'react'\nimport { Table, Input, } from \"antd\"\n\nexport default class RevelTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pagination: {\n                current: 1,\n                pageSize: 10,\n            },\n            filters: {},\n        }\n    }\n\n    componentDidMount() {\n        const { pageSize, } = this.props\n\n        this.setState(state => {\n            state.pagination.pageSize = pageSize || 10\n\n            return { pagination: state.pagination }\n        })\n    }\n\n    _onChangeTable(pagination, filters, sorter) {\n        this.setState({\n            pagination: pagination,\n            filters: filters,\n        }, () => {\n            const { filters } = this.state\n            let props_filters = {}\n\n            this.props.columns.forEach(item => {\n                if (filters[item.dataIndex] !== undefined && filters[item.dataIndex] !== null) {\n                    if (item.filterAble && filters[item.dataIndex].length) {\n                        props_filters[item.dataIndex] = filters[item.dataIndex][0]\n                    } else {\n                        props_filters[item.dataIndex] = filters[item.dataIndex]\n                    }\n                }\n            })\n\n            if (this.props.onChange !== undefined) {\n                this.props.onChange({\n                    pagination: this.state.pagination,\n                    filters: props_filters,\n                    sorter: sorter,\n                })\n            }\n        })\n    }\n\n    _setColumnsProps() {\n        const { filters, pagination } = this.state\n\n        var { columns, showRowNo } = this.props\n\n        for (let i in columns) {\n            if (columns[i].filterAble) {\n                columns[i] = Object.assign(columns[i], {\n                    filteredValue: filters[columns[i].dataIndex],\n                    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n                        <div style={{ padding: 6 }}>\n                            <Input\n                                ref={(node) => { this.searchInput = node }}\n                                placeholder=\"Search\"\n                                value={selectedKeys[0]}\n                                onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                                onPressEnter={() => confirm()}\n                                style={{ width: 'unset', display: \"inline-block\" }}\n                            />\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" style={{ height: 32, marginRight: 0, verticalAlign: \"top\", }} onClick={() => confirm()}>\n                                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>S\n                            </button>\n                            <button type=\"button\" className=\"btn btn-danger btn-sm\" style={{ height: 32, marginRight: 0, verticalAlign: \"top\", }} onClick={() => clearFilters()}>\n                                <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>C\n                            </button>\n                        </div>\n                    ),\n                    filterIcon: (filtered) => (<i className=\"ant-table-filter-trigger-icon fa fa-search\" aria-hidden=\"true\" style={{ color: filtered ? \"#1890ff\" : undefined, }} />),\n                    onFilter: (value, record) => record[columns[i].dataIndex] ? record[columns[i].dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n                    onFilterDropdownVisibleChange: visible => {\n                        if (visible) setTimeout(() => this.searchInput.select(), 100)\n                    },\n                })\n            } else if (columns[i].filters !== undefined && columns[i].filters.length) {\n                columns[i] = Object.assign(columns[i], {\n                    filteredValue: filters[columns[i].dataIndex] || null,\n                    onFilter: (value, record) => {\n                        if (record[columns[i].dataIndex]) return record[columns[i].dataIndex].includes(value)\n                    },\n                })\n            }\n        }\n\n        if (showRowNo) {\n            return [\n                {\n                    title: \"No.\",\n                    render: (cell, row, index) => (((pagination.current - 1) * pagination.pageSize) + index + 1),\n                    width: 48,\n                    align: 'center',\n                    fixed: \"left\",\n                }, ...columns\n            ]\n        } else {\n            return columns\n        }\n    }\n\n    render() {\n        let { setProps } = this.props\n\n        return (\n            <div style={{ overflow: 'auto', }}>\n                <Table\n                    scroll={{x:1300}}\n                    size={this.props.size || 'small'}\n                    loading={this.props.loading || false}\n                    bordered={this.props.bordered || true}\n                    dataSource={this.props.dataSource || []}\n                    pagination={(this.props.pagination === false ? false : { ...this.state.pagination, total: this.props.dataTotal })}\n                    rowKey={(row) => row[this.props.rowKey]}\n                    columns={this._setColumnsProps()}\n                    onChange={(pagination, filters, sorter) => this._onChangeTable(pagination, filters, sorter)}\n                    style={this.props.style || { minWidth: 600, }}\n                    {...setProps}\n                />\n            </div>\n        )\n    }\n}\n\n\n","import React from \"react\";\r\nimport { DatePicker } from \"antd\";\r\n\r\nexport default function DateNKP(props) {\r\n  async function _handlerDate(e) {\r\n    if (e !== null) {\r\n      const date = new Date(e._d);\r\n      var day = (\"0\" + date.getDate()).slice(-2);\r\n      var month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n      var year = date.getFullYear();\r\n      var fullDate = [year, month, day].join(\"-\");\r\n      props.valueDate(fullDate);\r\n    } else {\r\n      var fullDate = \"\";\r\n      props.valueDate(fullDate);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DatePicker\r\n        format={\"DD-MMM-Y\"}\r\n        showToday={false}\r\n        // value={moment(\r\n        //   formData.recieve_date.date,\r\n        //   \"DD-MM-YYYY\"\r\n        // )}\r\n        onChange={(e) => _handlerDate(e)}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { BaseModel } from \"./MainModel\";\r\n\r\n\r\nexport default class Ot extends BaseModel {\r\n\r\n    async getOT(data) {\r\n        return this.directFetch({\r\n            url: \"GetOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n\r\n\r\n    async saveOT(data) {\r\n        this.directFetch({\r\n            url: \"InsertOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n    async approveOT(data) {\r\n        this.directFetch({\r\n            url: \"ApproveOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n\r\n    async getOTHis(data){\r\n        return this.directFetch({\r\n            url: \"GetHisOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n    async getOTHisDetail(data){\r\n        return this.directFetch({\r\n            url: \"GetDetailOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n    async getCarPoint(data){\r\n        return this.directFetch({\r\n            url: \"GetCarPointOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n\r\n    async updateOT(data){\r\n        this.directFetch({\r\n            url:\"UpdateOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n\r\n    async delOT(data){\r\n        this.directFetch({\r\n            url:\"DelOTData\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n    \r\n    async rejectOTbyEmp(data){\r\n        this.directFetch({\r\n            url:\"RejectOT\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n\r\n    async rejectOTbyDate(data){\r\n        this.directFetch({\r\n            url:\"RejectOTbyDate\",\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}