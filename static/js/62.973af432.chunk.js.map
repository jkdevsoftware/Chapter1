{"version":3,"sources":["views/charts/ChartLineSimple.js","views/widgets/WidgetsDropdown.js"],"names":["ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","labels","defaultProps","AttendenceModel","WidgetsDropdown","useState","useEffect","_fetchData","a","sm","lg","header","text","style","height","name","width"],"mappings":"kUAKMA,EAAkB,SAAAC,GAEtB,IACEC,EAOED,EAPFC,YACAC,EAMEF,EANFE,gBACAC,EAKEH,EALFG,0BACAC,EAIEJ,EAJFI,WACAC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,QACGC,EAPL,YAQIP,EARJ,GAUMQ,EACAL,IAE2B,gBAApBD,EACFA,EAEFD,GAGHQ,EACG,CACL,CACEC,KAAMN,EACNH,YAAaU,mBAASV,GACtBC,gBAAiBS,mBAAST,GAC1BU,qBAAsBD,mBAASH,GAC/BL,0BAA2BQ,mBAASH,GACpCH,UAKAQ,EACG,CACLC,OAAQ,CACNC,MAAO,CACL,CACEC,QAAQ,EACRC,UAAW,CACTC,MAAO,cACPC,cAAe,eAEjBC,MAAO,CACLC,SAAU,EACVC,UAAW,iBAIjBC,MAAO,CACL,CACEC,SAAS,EACTJ,MAAO,CACLI,SAAS,EACTC,IAAKC,KAAKD,IAAIE,MAAMD,KAAMtB,GAAc,EACxCwB,IAAKF,KAAKE,IAAID,MAAMD,KAAMtB,GAAc,MAKhDyB,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,KAMfC,EACG,CACLtB,OAAQ,CACNC,MAAO,CAAC,CACNS,SAAS,IAEXD,MAAO,CAAC,CACNC,SAAS,KAGbK,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,KAMfE,EAAkB,WACtB,IAAMC,EAAUhC,EAAUO,EAAiBuB,EACzC,OAAOG,OAAOC,OAAO,GAAIF,EAAS,CAChCG,qBAAqB,EACrBC,OAAQ,CACNlB,SAAS,KALO,GAUlBmB,EACGC,2BAAiBnC,EAAiBF,EAAWsC,UAAY,IAG5DC,EACGF,2BAAiBP,EAAgB9B,EAAW+B,SAAW,IAKhE,OACE,cAAC,IAAD,2BACM/B,GADN,IAEEsC,SAAUF,EACVL,QAASQ,EACTC,OAAQ1C,MAiBdN,EAAgBiD,aAAe,CAC7B/C,YAAa,wBACbC,gBAAiB,cACjBE,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDC,MAAO,SAGMN,O,wICvIG,IAAIkD,IAqJPC,UAnJS,WACtB,MAAwBC,mBAAS,IAAjC,6BAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAU,uCAAG,sBAAAC,EAAA,0FAAH,qDAIhB,OACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAhB,SACE,cAAC,KAAD,CACEtC,MAAM,mBACNuC,OAAO,UACPC,KAAK,iBACLC,MAAO,CAAEC,OAAQ,SAJnB,SAiBE,cAAC,IAAD,CAAOC,KAAK,aAAaF,MAAO,CAACG,MAAM,OAAOF,OAAO,cAezD,cAAC,IAAD,CAAML,GAAG,IAAIC,GAAG,IAAhB,SACE,cAAC,KAAD,CACEtC,MAAM,gBACNuC,OAAO,UACPC,KAAK,iBACLC,MAAO,CAAEC,OAAQ,SAJnB,SAkBE,cAAC,IAAD,CAAOC,KAAK,WAAWF,MAAO,CAACG,MAAM,OAAOF,OAAO,cAevD,cAAC,IAAD,CAAML,GAAG,IAAIC,GAAG,IAAhB,SACE,cAAC,KAAD,CACEtC,MAAM,mBACNuC,OAAO,UACPC,KAAK,gBACLC,MAAO,CAAEC,OAAQ,SAJnB,SAkBE,cAAC,IAAD,CAAOC,KAAK,eAAeF,MAAO,CAACG,MAAM,OAAOF,OAAO","file":"static/js/62.973af432.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\nimport { CChartLine } from '@coreui/react-chartjs'\n\nconst ChartLineSimple = props => {\n\n  const {\n    borderColor,\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const pointHoverColor = (()=>{\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor\n    }\n    return borderColor\n  })()\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label\n      }\n    ]\n  })()\n\n  const pointedOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: 'transparent',\n              zeroLineColor: 'transparent'\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: 'transparent'\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const straightOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const defaultOptions = (()=>{\n    const options = pointed ? pointedOptions : straightOptions\n      return Object.assign({}, options, {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        }\n      })\n  })()\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\n  })()\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\n  })()\n\n  // render\n\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={computedDatasets}\n      options={computedOptions}\n      labels={label}\n    />\n  )\n}\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartLineSimple\n","import React, { useState, useEffect } from 'react'\nimport {\n  CWidgetDropdown,\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport ChartLineSimple from '../charts/ChartLineSimple'\nimport ChartBarSimple from '../charts/ChartBarSimple'\nimport AttendenceModel from \"../../models/AttendenceModel\";\n\n\nconst att_model = new AttendenceModel();\n\nconst WidgetsDropdown = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    _fetchData();\n  }, []);\n\n  const _fetchData = async () => {\n    \n  };\n\n  return (\n    <CRow>\n      <CCol sm=\"6\" lg=\"4\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"704 ea.\"\n          text=\"MFG 2 Members.\"\n          style={{ height: '100px' }}\n        // footerSlot={\n        //   <ChartLineSimple\n        //     pointed\n        //     className=\"c-chart-wrapper mt-3 mx-3\"\n        //     style={{height: '70px'}}\n        //     dataPoints={[65, 59, 84, 84, 51, 55, 40]}\n        //     pointHoverBackgroundColor=\"primary\"\n        //     label=\"Members\"\n        //     labels=\"months\"\n        //   />\n        // }\n        >\n          <CIcon name=\"cil-people\" style={{width:\"70px\",height:\"65px\"}}/>\n          {/* <CDropdown>\n            <CDropdownToggle color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown> */}\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"4\">\n        <CWidgetDropdown\n          color=\"gradient-info\"\n          header=\"500 ea.\"\n          text=\"Present today.\"\n          style={{ height: '100px' }}\n        // footerSlot={\n        //   <ChartLineSimple\n        //     pointed\n        //     className=\"mt-3 mx-3\"\n        //     style={{height: '70px'}}\n        //     dataPoints={[1, 18, 9, 17, 34, 22, 11]}\n        //     pointHoverBackgroundColor=\"info\"\n        //     options={{ elements: { line: { tension: 0.00001 }}}}\n        //     label=\"Members\"\n        //     labels=\"months\"\n        //   />\n        // }\n        >\n          <CIcon name=\"cil-user\" style={{width:\"70px\",height:\"65px\"}}/>\n          {/* <CDropdown>\n            <CDropdownToggle caret={false} color=\"transparent\">\n              <CIcon name=\"cil-location-pin\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown> */}\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"4\">\n        <CWidgetDropdown\n          color=\"gradient-warning\"\n          header=\"162 ea.\"\n          text=\"Absent today.\"\n          style={{ height: '100px' }}\n        // footerSlot={\n        //   <ChartLineSimple\n        //     className=\"mt-3\"\n        //     style={{height: '70px'}}\n        //     backgroundColor=\"rgba(255,255,255,.2)\"\n        //     dataPoints={[78, 81, 80, 45, 34, 12, 40]}\n        //     options={{ elements: { line: { borderWidth: 2.5 }}}}\n        //     pointHoverBackgroundColor=\"warning\"\n        //     label=\"Members\"\n        //     labels=\"months\"\n        //   />\n        // }\n        >\n          <CIcon name=\"cil-x-circle\" style={{width:\"70px\",height:\"65px\"}}/>\n          {/* <CDropdown>\n            <CDropdownToggle color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown> */}\n        </CWidgetDropdown>\n      </CCol>\n\n      {/* <CCol sm=\"6\" lg=\"3\" >\n        <CWidgetDropdown\n          color=\"gradient-danger\"\n          header=\"5 ea.\"\n          text=\"Resign\"\n          style={{ height: '100px' }}\n        // footerSlot={\n        //   <ChartBarSimple\n        //     className=\"mt-3 mx-3\"\n        //     style={{height: '70px'}}\n        //     backgroundColor=\"rgb(250, 152, 152)\"\n        //     label=\"Members\"\n        //     labels=\"months\"\n        //   />\n        // }\n        > */}\n          {/* <CDropdown>\n            <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\n              <CIcon name=\"cil-settings\"/>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n              <CDropdownItem>Action</CDropdownItem>\n              <CDropdownItem>Another action</CDropdownItem>\n              <CDropdownItem>Something else here...</CDropdownItem>\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown> */}\n        {/* </CWidgetDropdown> */}\n      {/* </CCol> */}\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"sourceRoot":""}